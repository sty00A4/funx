$ types
def @is (function <any any> #(= (type %0) (type %1)));
def @number (union int float);
def @some (exclude undefined);
def @iter (union str vec);

def @int? (function <any> #(= (type %0) int));
def @float? (function <any> #(= (type %0) float));
def @number? (function <any> #(= (type %0) number));
def @bool? (function <any> #(= (type %0) bool));
def @str? (function <any> #(= (type %0) str));
def @vec? (function <any> #(= (type %0) vec));
def @nativ-function? (function <any> #(= (type %0) nativ-function));
def @function? (function <any> #(= (type %0) function));
def @addr? (function <any> #(= (type %0) addr));
def @closure? (function <any> #(= (type %0) closure));
def @pattern? (function <any> #(= (type %0) pattern));
def @type? (function <any> #(= (type %0) type));

$ more operations
def @not (function <bool> #(%0 false true));
def @or (function <bool bool> #(%0 true %1));
def @and (function <bool bool> #(%0 %1 false));
